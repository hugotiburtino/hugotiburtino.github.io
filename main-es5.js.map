{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/aboutme/aboutme.component.ts","webpack:///src/app/aboutme/aboutme.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/lib/idref.pipe.ts","webpack:///src/app/lib/skill-category.enum.ts","webpack:///src/app/lib/tab.class.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/projects-panel/projects-panel.component.ts","webpack:///src/app/projects-panel/projects-panel.component.html","webpack:///src/app/services/aboutme.service.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/skills-panel/skills-panel.component.ts","webpack:///src/app/skills-panel/skills-panel.component.html","webpack:///src/app/submodules/app-routing.module.ts","webpack:///src/app/submodules/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutmeComponent","service","getAboutme","subscribe","data","completeName","elevatorPitch","city","status","err","console","error","selector","templateUrl","styleUrls","AppComponent","AppModule","declarations","imports","providers","bootstrap","ContactComponent","FooterComponent","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","githubAccount","HeaderComponent","title","subtitle","aboutMeBarActive","emit","showAboutMe","IdRefPipe","ref","name","SkillCategory","Tab","NavbarComponent","tabs","ProjectsPanelComponent","getProjects","projectsData","projects","target","project","value","parentElement","SEE","INFO","SOURCE_CODE","window","open","url","focus","srcCodeUrl","AboutmeService","http","dataUrl","aboutmeUrl","get","providedIn","ProjectsService","projectsUrl","SkillsPanelComponent","category","skillsMap","Map","skills","categorize","item","set","filter","sk","categories","includes","Object","routes","AppRoutingModule","forRoot","MaterialModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AboutmeService } from '../services/aboutme.service';\n\n@Component({\n  selector: 'app-aboutme',\n  templateUrl: './aboutme.component.html',\n  styleUrls: ['./aboutme.component.css']\n})\nexport class AboutmeComponent implements OnInit {\n\n  completeName: string;\n\n  elevatorPitch: string;\n\n  city: string;\n\n  status: string;\n\n  constructor(private service: AboutmeService) { }\n\n  ngOnInit(): void {\n    this.service.getAboutme().subscribe(\n      data => {\n        this.completeName = data.completeName;\n        this.elevatorPitch = data.elevatorPitch;\n        this.city = data.city;\n        this.status = data.status;\n      }, err => console.error('Error occurred while fetching projects data: ', err));\n  }\n\n}\n","<h2>{{completeName}}</h2>\n<p class=\"\"[innerHTML]=\"elevatorPitch\"></p>\n<p>Status: {{status}}</p>\n<p>{{city}}</p>\n<app-footer></app-footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n","<mat-drawer-container class=\"\" autosize>\n  <mat-drawer #drawer class=\"sidebar\" mode=\"over\">\n    <app-aboutme></app-aboutme>\n  </mat-drawer>\n  <app-header (aboutMeBarActive)=\"drawer.toggle()\"></app-header>\n  <app-projects-panel></app-projects-panel>\n  <app-skills-panel></app-skills-panel>\n  <app-footer></app-footer>\n</mat-drawer-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './submodules/app-routing.module';\nimport { MaterialModule } from './submodules/material.module';\n\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ProjectsPanelComponent } from './projects-panel/projects-panel.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HeaderComponent } from './header/header.component';\nimport { IdRefPipe } from './lib/idref.pipe';\nimport { AboutmeComponent } from './aboutme/aboutme.component';\nimport { SkillsPanelComponent } from './skills-panel/skills-panel.component';\nimport { ContactComponent } from './contact/contact.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    ProjectsPanelComponent,\n    NavbarComponent,\n    HeaderComponent,\n    IdRefPipe,\n    AboutmeComponent,\n    SkillsPanelComponent,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  githubAccount: string;\n  contact: string;\n\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\n    this.matIconRegistry.addSvgIcon(\n      'github',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../../assets/github.svg')\n    );\n  }\n\n  ngOnInit(): void {\n    this.githubAccount = 'https://github.com/hugotiburtino';\n  }\n\n}\n","<mat-divider></mat-divider>\n<footer id=\"contact\" class=\"text-center\" >\n    <a matTooltip=\"Hugo's GitHub Account\" [href]=\"githubAccount\" target=\"_blank\"><mat-icon svgIcon=\"github\"></mat-icon></a>\n    <a href=\"https://www.freelancermap.com/freelancers-directory/freelancer-profiles/development/183699-profil-hugo-bezerra-tiburtino-full-stack-web-developer-aus-munich.html\" \n       target=\"_blank\" title=\"Profile of Hugo Bezerra Tiburtino on www.freelancermap.com\"\n       matTooltip=\"Hugo's Profile at Freelancermap\">\n        <img src=\"https://www.freelancermap.com/images/widgets/button/square-32.png\"></a>\n        <!--app-contact></app-contact-->\n</footer>\n<p>Last update: 03 July 2020</p>\n\n","import { Component, OnInit, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  title = 'Hugo Tiburtino';\n  subtitle = '';\n  @Output() aboutMeBarActive = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  showAboutMe() {\n    this.aboutMeBarActive.emit(true);\n  }\n\n}\n","<header>\n  <mat-toolbar color=\"primary\">  \n    <mat-toolbar-row>\n      <button (click)=\"showAboutMe()\" mat-button>\n        <h1>{{title}} <small>{{subtitle}}</small></h1>\n      </button>\n      <app-navbar></app-navbar>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</header>\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Makes a hyper-reference to an id\n */\n/*\n * Raise the value exponentially\n * Takes an exponent argument that defaults to 1.\n * Usage:\n *   value | exponentialStrength:exponent\n * Example:\n *   {{ 2 | exponentialStrength:10 }}\n *   formats to: 1024\n*/\n@Pipe({name: 'idref'})\nexport class IdRefPipe implements PipeTransform {\n  transform(ref: string): string {\n    return '#' + ref;\n  }\n}\n","export enum SkillCategory {\n    Backend = 'Back-end',\n    Frontend = 'Front-end',\n    CICD = 'CI/CD',\n    BestPractices = 'Best Practices',\n    TDD = 'TDD',\n    DBMS = 'DBMS',\n    ESB = 'ESB'\n}\n","export class Tab {\n\n    name: string;\n    ref: string;\n\n    constructor(name: string, ref?: string) {\n        this.name = name;\n        this.ref = ref;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Tab } from '../lib/tab.class';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  tabs: Tab[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.tabs = [new Tab('Projects', 'projects-panel'), new Tab('Contact')];\n\n  }\n\n}\n","<nav>\n    <mat-toolbar-row>\n        <!--div *ngFor=\"let tab of tabs\" class=\"text-right\">\n            <a mat-button [href]=\"tab.ref | idref\">{{ tab.name }}</a>\n        </div-->\n    </mat-toolbar-row>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../lib/project.class';\nimport { ProjectsService } from '../services/projects.service';\n\n/**\n * Component that is responsable for displaying data\n * about projects\n */\n@Component({\n  selector: 'app-projects-panel',\n  templateUrl: './projects-panel.component.html',\n  styleUrls: ['./projects-panel.component.css']\n})\nexport class ProjectsPanelComponent implements OnInit {\n\n  title = 'Personal Projects';\n\n  /** List of current projects */\n  projects: Project[];\n\n  /**\n   * @param ProjectsService service that provides info\n   * to fill up the projects list\n   */\n  constructor(private service: ProjectsService) { }\n\n  ngOnInit(): void {\n    // Get projects from ProjectService and add them to projects list\n    this.service.getProjects().subscribe(\n      projectsData => this.projects = projectsData,\n      err => console.error('Error occurred while fetching projects data: ', err)\n    ); // TODO: better error handling\n  }\n\n  /**\n   * Handles the action button clicks of a project card\n   * @param target The button clicked\n   * @param project The project whose card button was clicked\n   */\n  onClick(target, project) {\n    /**\n     * Since Angular Material wraps text of the button element\n     * into a node by itself, we need to find the value of the button first\n     */\n    const value: number = target.value | target.parentElement.value;\n    const [SEE, INFO, SOURCE_CODE] = [0, 1, 2];\n    if (value === SEE) {\n      window.open(project.url, '_blank').focus();\n    } else if (value === INFO) {\n      // Implementme\n    } else if (value === SOURCE_CODE) {\n      window.open(project.srcCodeUrl, '_blank').focus();\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>{{title}}</h2>\n  <div class=\"row d-flex justify-content-center\">\n    <mat-card class=\"project-card\" *ngFor=\"let proj of projects\">\n      <mat-card-header>\n        <mat-card-title>{{proj.name}}</mat-card-title>\n        <mat-card-subtitle>{{proj.summary}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list selectable=\"false\">\n          <mat-chip disableRipple=\"true\" *ngFor=\"let tech of proj.techs\">\n            {{tech}}\n          </mat-chip>\n        </mat-chip-list>\n      </mat-card-content>\n      <mat-card-actions (click)=\"onClick($event.target, proj)\">\n        <button value=\"0\" *ngIf=\"proj.url\" role=\"link\"  \n          matTooltip=\"See it in production\" mat-button>See</button>\n        <!--button value=\"1\" role=\"link\" matTooltip=\"\" mat-button>Info</button-->\n        <button value=\"2\" matTooltip=\"See source code repo\" mat-button>Source Code</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Skill } from '../lib/skill';\nimport { Aboutme } from '../lib/aboutme';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AboutmeService {\n\n  dataUrl = environment.aboutmeUrl;\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Reads info \"about me\"\n   * @returns Observable<Aboutme>\n   */\n  public getAboutme() {\n    return this.http.get<Aboutme>(this.dataUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Project } from '../lib/project.class';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Service that provides info about projects\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n\n  dataUrl = environment.projectsUrl;\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Reads current list of projects from json file\n   * @returns Observable<Project[]>\n   */\n  public getProjects() {\n    return this.http.get<Project[]>(this.dataUrl);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AboutmeService } from '../services/aboutme.service';\nimport { Skill } from '../lib/skill';\nimport { SkillCategory } from '../lib/skill-category.enum';\n\n@Component({\n  selector: 'app-skills-panel',\n  templateUrl: './skills-panel.component.html',\n  styleUrls: ['./skills-panel.component.css']\n})\nexport class SkillsPanelComponent implements OnInit {\n\n  title = 'Programming Skills';\n  skills: Skill[];\n  category = SkillCategory;\n  /** Map of skills\n   * Key: Skill category\n   * Value: Array of skills\n   */\n  skillsMap = new Map();\n\n  constructor(private service: AboutmeService) { }\n\n  ngOnInit(): void {\n    this.service.getAboutme().subscribe(\n      data => {\n        this.skills = data.skills;\n        this.categorize();\n      }, err => console.error('Error occurred while fetching projects data: ', err)\n    );\n  }\n  /**\n   * Method that fills up the Map of skills\n   */\n  categorize() {\n    for (const item of Object.keys(this.category)) {\n      this.skillsMap.set(this.category[item], this.skills.filter(sk =>\n           sk.categories && sk.categories.includes(this.category[item])));\n    }\n  }\n\n\n}\n","<div class=\"container-fluid\">\n    <h2>{{title}}</h2>\n    <mat-list role=\"list\" *ngFor=\"let item of skillsMap | keyvalue\">\n        <div class=\"row d-flex justify-content-center\">\n            <mat-list-item class=\"d-flex justify-content-center\" \n            role=\"listitem\">{{item.key}}</mat-list-item>\n            <mat-chip-list class=\"col-sm-12 d-flex justify-content-center\" selectable=\"false\">\n                <mat-chip color=\"primary\" selected disableRipple=\"true\" *ngFor=\"let skill of item.value\">\n                    {{skill.subject}}\n                </mat-chip>\n            </mat-chip-list>\n        </div>\n    </mat-list>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatListModule } from '@angular/material/list';\nimport { MatChipsModule } from '@angular/material/chips';\n\n\n@NgModule({\n  declarations: [],\n  exports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    MatListModule,\n    MatChipsModule\n  ]\n})\nexport class MaterialModule { }\n","export const environment = {\n  production: false,\n  aboutmeUrl: '../../assets/aboutme.json',\n  projectsUrl: '../../assets/projects.json'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}